<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:SleepHunter.Converters"
                    xmlns:settings="clr-namespace:SleepHunter.Settings">

    <converters:LessThanConverter x:Key="LessThanConverter"/>
    <converters:LessThanOrEqualConverter x:Key="LessThanOrEqualConverter"/>
    <converters:GreaterThanConverter x:Key="GreaterThanConverter"/>
    <converters:GreaterThanOrEqualConverter x:Key="GreaterThanOrEqualConverter"/>
    <converters:AbsoluteValueConverter x:Key="AbsoluteValueConverter"/>

    <DataTemplate x:Key="TilesXDataTemplate">
        <Border>
            <Grid>
                <TextBlock Name="Text"
                           Style="{StaticResource ObsidianText}"
                           Text="{Binding StringFormat={}{0} Right, Converter={StaticResource AbsoluteValueConverter}}"
                           FontSize="16"
                           TextAlignment="Center"
                           TextWrapping="Wrap"
                           Margin="2,3,2,2"/>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="Text" Property="Text" Value="{Binding StringFormat={}{0} Left, Converter={StaticResource AbsoluteValueConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="0">
                <Setter TargetName="Text" Property="Text" Value="None"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="TilesYDataTemplate">
        <Border>
            <Grid>
                <TextBlock Name="Text"
                           Style="{StaticResource ObsidianText}"
                           Text="{Binding StringFormat={}{0} Down, Converter={StaticResource AbsoluteValueConverter}}"
                           FontSize="16"
                           TextAlignment="Center"
                           TextWrapping="Wrap"
                           Margin="2,3,2,2"/>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="Text" Property="Text" Value="{Binding StringFormat={}{0} Up, Converter={StaticResource AbsoluteValueConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="0">
                <Setter TargetName="Text" Property="Text" Value="None"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SpellQueueItemDataTemplate">
        <DockPanel>
            <Border Name="SelectionBorder" DockPanel.Dock="Left"
                    Width="6"
                    Background="{DynamicResource ObsidianBackground}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed"/>
            <Border Name="Border" Background="{StaticResource ObsidianControlBackground}"
                    Padding="10,4,10,4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Name="IconBorder"
                            Grid.RowSpan="3"
                            Padding="2"
                            Margin="8,5"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            BorderBrush="{DynamicResource ObsidianBackground}"
                            CornerRadius="2">
                        <Grid>
                            <Image Name="Icon" 
                                   Width="{Binding Source={x:Static settings:UserSettingsManager.Instance}, Path=Settings.SkillIconSize}" 
                                   Height="{Binding Source={x:Static settings:UserSettingsManager.Instance}, Path=Settings.SkillIconSize}" 
                                   Source="{Binding Icon}"
                                   Opacity="0.5"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        </Grid>
                    </Border>

                    <StackPanel Grid.Column="1" 
                                Orientation="Vertical"
                                VerticalAlignment="Center">
                        <TextBlock Name="NameText"
                                   Style="{StaticResource ObsidianText}"
                                   Foreground="{StaticResource ObsidianForeground}"
                                   FontSize="16"
                                   Text="{Binding Name}"
                                   TextWrapping="WrapWithOverflow"
                                   Margin="4,2"/>
                        <TextBlock Name="TargetText"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Grid.ColumnSpan="3"
                                   Style="{StaticResource ObsidianText}"
                                   Foreground="{StaticResource ObsidianForeground}"
                                   FontSize="14"
                                   Text="{Binding Target, StringFormat=Targeting {0}}"
                                   TextWrapping="WrapWithOverflow"
                                   Margin="4,2"
                                   Opacity="0.75"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Name="CurrentLevelText"
                                       Style="{StaticResource ObsidianText}"
                                       Foreground="{StaticResource ObsidianForeground}"
                                       FontSize="14"
                                       FontWeight="Normal"
                                       Text="{Binding CurrentLevel}"
                                       TextWrapping="WrapWithOverflow"
                                       Margin="6,2,4,2"
                                       Opacity="0.75"
                                       Visibility="{Binding ElementName=ProgressBar, Path=Visibility}"/>

                            <ProgressBar Name="ProgressBar"
                                         Grid.Column="1"
                                         Height="10"
                                         Value="{Binding PercentCompleted, Mode=OneWay}"
                                         Style="{StaticResource ObsidianProgressBar}"
                                         VerticalAlignment="Center"
                                         Margin="2"/>

                            <TextBlock Name="TargetLevelText"
                                       Grid.Column="2"
                                       Style="{StaticResource ObsidianText}"
                                       Foreground="{StaticResource ObsidianForeground}"
                                       FontSize="14"
                                       FontWeight="Normal"
                                       Text="{Binding TargetLevel}"
                                       TextWrapping="WrapWithOverflow"
                                       Margin="4,2,6,2"
                                       Opacity="0.75"
                                       Visibility="{Binding ElementName=ProgressBar, Path=Visibility}"/>
                        </Grid>

                        <TextBlock Name="CompletedText"
                                   Style="{StaticResource ObsidianText}"
                                   Foreground="{StaticResource ObsidianInactive}"
                                   FontSize="12"
                                   FontWeight="Normal"
                                   Visibility="Collapsed"
                                   Margin="6,2">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Reached Level {0} of {1}">
                                    <Binding Path="TargetLevel"/>
                                    <Binding Path="MaximumLevel"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <Border Name="WarningBorder"
                            Background="Transparent"
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            ToolTip="This spell is not defined in metadata, may not cast properly."
                            Margin="0,0,2,0"
                            Visibility="Collapsed">
                        <Path Name="WarningIcon"
                              StrokeThickness="2"
                              Stroke="{DynamicResource ObsidianBackground}"
                              Data="M 0,24 h 24 l -12,-22 z m 12,-15 v 8 m 0,2 v 2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                    </Border>
                </Grid>
            </Border>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsUndefined}" Value="True">
                <Setter TargetName="WarningBorder" Property="Visibility" Value="Visible"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="WarningIconFade">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="WarningIcon"
                                             Storyboard.TargetProperty="Opacity"
                                             From="1.0" To="0.25" Duration="0:0:0.400"
                                             AccelerationRatio="0.75"
                                             AutoReverse="True"
                                             RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="WarningIconFade"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDone}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ObsidianSeparatorColor}"/>
                <Setter TargetName="NameText" Property="Foreground" Value="{StaticResource ObsidianDisabled}"/>
                <Setter TargetName="TargetText" Property="Foreground" Value="{StaticResource ObsidianDisabled}"/>
                <Setter TargetName="CurrentLevelText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TargetLevelText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ProgressBar" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TargetText" Property="Opacity" Value="1.0"/>
                <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                <Setter TargetName="CompletedText" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="False">
                <Setter TargetName="NameText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
                <Setter TargetName="TargetText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
                <Setter TargetName="CurrentLevelText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
                <Setter TargetName="TargetLevelText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
                <Setter TargetName="CompletedText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Border" Property="Padding" Value="4,4,10,4"/>
                <Setter TargetName="NameText" Property="Foreground" Value="{StaticResource ObsidianForeground}"/>
                <Setter TargetName="TargetText" Property="Foreground" Value="{StaticResource ObsidianForeground}"/>
                <Setter TargetName="CurrentLevelText" Property="Foreground" Value="{StaticResource ObsidianForeground}"/>
                <Setter TargetName="TargetLevelText" Property="Foreground" Value="{StaticResource ObsidianForeground}"/>
                <Setter TargetName="CompletedText" Property="Foreground" Value="{StaticResource ObsidianInactive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasTargetLevel}" Value="False">
                <Setter TargetName="ProgressBar" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Target.Units}" Value="None">
                <Setter TargetName="TargetText" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter TargetName="Icon" Property="Opacity" Value="1"/>
                <Setter TargetName="IconBorder" Property="BorderThickness" Value="3"/>
                <Setter TargetName="IconBorder" Property="Margin" Value="5,2"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FlowerQueueItemDataTemplate">
        <DockPanel>
            <Border Name="SelectionBorder" DockPanel.Dock="Left"
                    Width="6"
                    Background="{DynamicResource ObsidianBackground}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed"/>
            <Border Name="Border" Padding="10,4">
                <StackPanel Orientation="Vertical">
                    <TextBlock Name="TargetText"
                               Style="{StaticResource ObsidianText}"
                               FontSize="18"
                               Text="{Binding Target, StringFormat=Flowering {0}}"
                               Margin="8,2"/>
                    <WrapPanel Orientation="Horizontal" Margin="4,0">
                        <TextBlock Name="IntervalText"
                                   Style="{StaticResource ObsidianText}"
                                   FontSize="14"
                                   Text="{Binding Interval, Converter={StaticResource TimeSpanConverter}, ConverterParameter=Fractional, StringFormat=Every {0}}"
                                   Foreground="{StaticResource ObsidianInactive}"
                                   Margin="4,2"/>

                        <TextBlock Name="ThresholdText"
                                   Style="{StaticResource ObsidianText}"
                                   FontSize="14"
                                   Text="{Binding ManaThreshold, StringFormat=If Mana &lt; {0}}"
                                   Foreground="{StaticResource ObsidianInactive}"
                                   Margin="4,2"/>
                    </WrapPanel>
                    <DockPanel>
                        <TextBlock Name="RemainingText"
                                   Grid.Row="1"
                                   Style="{StaticResource ObsidianText}"
                                   Text="{Binding RemainingTime, Converter={StaticResource TimeSpanConverter}, ConverterParameter=Cooldown, Mode=OneWay, StringFormat=Waiting {0}...}"
                                   FontSize="16"
                                   Margin="6,2"/>

                        <ProgressBar Name="TimeProgressBar"
                                     DockPanel.Dock="Right"
                                     Grid.Row="1"
                                     Height="8"
                                     Minimum="0"
                                     Maximum="{Binding IntervalSeconds, Mode=OneWay}"
                                     Value="{Binding RemainingTimeSeconds, Mode=OneWay}"
                                     Style="{StaticResource ObsidianProgressBar}"
                                     VerticalAlignment="Center"
                                     Margin="8,2"/>
                    </DockPanel>
                </StackPanel>
            </Border>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Border" Property="Padding" Value="4,4,10,4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ManaThreshold}" Value="{x:Null}">
                <Setter TargetName="ThresholdText" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Interval}" Value="{x:Null}">
                <Setter TargetName="IntervalText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TimeProgressBar" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="RemainingText" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Interval}" Value="0">
                <Setter TargetName="IntervalText" Property="Text" Value="Continuously"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsReady, Mode=OneWay}" Value="True">
                <Setter TargetName="RemainingText" Property="Text" Value="Waiting to be Flowered..."/>
                <Setter TargetName="TimeProgressBar" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>